{"uid":"80acc30c37032fdf","name":"Can Purchase Electric","fullName":"ENSEK:ENSEK.Tests.EndPoints.Buy.CanPurchaseElectric()","historyId":"5f5efaa0cc29733f4c00b431a8b5590f","time":{"start":1747630323651,"stop":1747630323790,"duration":139},"descriptionHtml":"\r\n             <strong>GIVEN</strong> Current <span class=\"label label_status_skipped\">Electricity</span> stock is greater than <span class=\"label label_status_skipped\">0</span> <br /><br />\r\n             <strong>AND</strong> I submit a valid purchase order <br /><br />\r\n             <strong>THEN</strong> a new <span class=\"label label_status_skipped\">order</span> shall be recorded <br /><br />\r\n             <strong>AND</strong> the order shall contain the correct purchase order information<br /><br />\r\n             <strong>AND</strong> I should receive a <span class=\"label label_status_skipped\">message</span> advising me of the particulars of my purchase <br /><br />\r\n            ","status":"failed","statusMessage":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[12], Is.EqualTo((Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy).ToString()))\r\n  String lengths are both 4. Strings differ at index 0.\r\n  Expected: \"2161\"\r\n  But was:  \"1161\"\r\n  -----------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Electric.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Electric.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  String lengths are both 135. Strings differ at index 59.\r\n  Expected: \"... a cost of 1015.67 there are 2161 units remaining. Your or...\"\r\n  But was:  \"... a cost of 1015.67 there are 1161 units remaining. Your or...\"\r\n  -------------------------------------------^\r\n\r\n","statusTrace":"   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass2_0.<CanPurchaseElectric>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 80\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass2_0.<CanPurchaseElectric>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 72\r\n   at Allure.Net.Commons.AllureApi.<>c__DisplayClass34_0.<Step>b__0()\r\n   at Allure.Net.Commons.AllureApi.ExecuteAction[T](String name, Action`1 start, Func`1 action, Action`1 resolve)\r\n   at Allure.Net.Commons.AllureApi.ExecuteStep[T](String name, Func`1 action)\r\n   at Allure.Net.Commons.AllureApi.Step(String name, Action action)\r\n   at ENSEK.Tests.EndPoints.Buy.CanPurchaseElectric() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 71\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"FixtureSetup","time":{"start":1747630323523,"stop":1747630323523,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"TestSetup","time":{"start":1747630323651,"stop":1747630323651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"descriptionHtml":"\r\n             <strong>GIVEN</strong> Current <span class=\"label label_status_skipped\">Electricity</span> stock is greater than <span class=\"label label_status_skipped\">0</span> <br /><br />\r\n             <strong>AND</strong> I submit a valid purchase order <br /><br />\r\n             <strong>THEN</strong> a new <span class=\"label label_status_skipped\">order</span> shall be recorded <br /><br />\r\n             <strong>AND</strong> the order shall contain the correct purchase order information<br /><br />\r\n             <strong>AND</strong> I should receive a <span class=\"label label_status_skipped\">message</span> advising me of the particulars of my purchase <br /><br />\r\n            ","status":"failed","statusMessage":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[12], Is.EqualTo((Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy).ToString()))\r\n  String lengths are both 4. Strings differ at index 0.\r\n  Expected: \"2161\"\r\n  But was:  \"1161\"\r\n  -----------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Electric.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Electric.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  String lengths are both 135. Strings differ at index 59.\r\n  Expected: \"... a cost of 1015.67 there are 2161 units remaining. Your or...\"\r\n  But was:  \"... a cost of 1015.67 there are 1161 units remaining. Your or...\"\r\n  -------------------------------------------^\r\n\r\n","statusTrace":"   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass2_0.<CanPurchaseElectric>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 80\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass2_0.<CanPurchaseElectric>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 72\r\n   at Allure.Net.Commons.AllureApi.<>c__DisplayClass34_0.<Step>b__0()\r\n   at Allure.Net.Commons.AllureApi.ExecuteAction[T](String name, Action`1 start, Func`1 action, Action`1 resolve)\r\n   at Allure.Net.Commons.AllureApi.ExecuteStep[T](String name, Func`1 action)\r\n   at Allure.Net.Commons.AllureApi.Step(String name, Action action)\r\n   at ENSEK.Tests.EndPoints.Buy.CanPurchaseElectric() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 71\r\n","steps":[{"name":"Step 1 : Create purchase order for 50% of current stock","time":{"start":1747630323652,"stop":1747630323652,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Step 2 : submit purchase order","time":{"start":1747630323652,"stop":1747630323719,"duration":67},"status":"passed","steps":[],"attachments":[{"uid":"c0fb2f602cd6efc6","name":"Raw Response","source":"c0fb2f602cd6efc6.txt","type":"application/json","size":4355}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Step 2 : assert order created","time":{"start":1747630323719,"stop":1747630323788,"duration":69},"status":"passed","steps":[],"attachments":[{"uid":"4e56e4b27d2edad1","name":"Order Confirmation","source":"4e56e4b27d2edad1.txt","type":"application/json","size":146}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Step 2 : assert confirmation message","time":{"start":1747630323788,"stop":1747630323790,"duration":2},"status":"failed","statusMessage":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[12], Is.EqualTo((Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy).ToString()))\r\n  String lengths are both 4. Strings differ at index 0.\r\n  Expected: \"2161\"\r\n  But was:  \"1161\"\r\n  -----------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Electric.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Electric.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  String lengths are both 135. Strings differ at index 59.\r\n  Expected: \"... a cost of 1015.67 there are 2161 units remaining. Your or...\"\r\n  But was:  \"... a cost of 1015.67 there are 1161 units remaining. Your or...\"\r\n  -------------------------------------------^\r\n\r\n","statusTrace":"NUnit.Framework.MultipleAssertException: Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[12], Is.EqualTo((Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy).ToString()))\r\n  String lengths are both 4. Strings differ at index 0.\r\n  Expected: \"2161\"\r\n  But was:  \"1161\"\r\n  -----------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Electric.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Electric.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Electric.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  String lengths are both 135. Strings differ at index 59.\r\n  Expected: \"... a cost of 1015.67 there are 2161 units remaining. Your or...\"\r\n  But was:  \"... a cost of 1015.67 there are 1161 units remaining. Your or...\"\r\n  -------------------------------------------^\r\n\r\n\r\n   at NUnit.Framework.Assert.AssertionScope.Dispose()\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass2_0.<CanPurchaseElectric>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 80\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass2_0.<CanPurchaseElectric>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 72\r\n   at Allure.Net.Commons.AllureApi.<>c__DisplayClass34_0.<Step>b__0()\r\n   at Allure.Net.Commons.AllureApi.ExecuteAction[T](String name, Action`1 start, Func`1 action, Action`1 resolve)\r\n   at Allure.Net.Commons.AllureApi.ExecuteStep[T](String name, Func`1 action)\r\n   at Allure.Net.Commons.AllureApi.Step(String name, Action action)\r\n   at ENSEK.Tests.EndPoints.Buy.CanPurchaseElectric() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 71","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":false,"stepsCount":4,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"TestTeardown","time":{"start":1747630323790,"stop":1747630323790,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"FixtureTeardown","time":{"start":1747630324088,"stop":1747630324088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"thread","value":"NUnit.Fw.NonParallelWorker"},{"name":"host","value":"MARKSPC"},{"name":"language","value":"C#"},{"name":"framework","value":"NUnit 3"},{"name":"package","value":"ENSEK.Tests.EndPoints"},{"name":"testMethod","value":"CanPurchaseElectric"},{"name":"testClass","value":"Buy"},{"name":"feature","value":"Buy Controls"},{"name":"suite","value":"Buy API End Point Tests"},{"name":"tag","value":"API Tests"},{"name":"tag","value":"Automated"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["API Tests","Automated"]},"source":"80acc30c37032fdf.json","parameterValues":[]}