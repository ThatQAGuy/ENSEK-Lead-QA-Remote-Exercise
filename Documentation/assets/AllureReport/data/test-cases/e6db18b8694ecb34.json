{"uid":"e6db18b8694ecb34","name":"Can Purchase Gas","fullName":"ENSEK:ENSEK.Tests.EndPoints.Buy.CanPurchaseGas()","historyId":"cf353d0b7c45ecfb7ead929c12003f0e","time":{"start":1747630406698,"stop":1747630406835,"duration":137},"descriptionHtml":"\r\n             <strong>GIVEN</strong> Current <span class=\"label label_status_skipped\">Electricity</span> stock is greater than <span class=\"label label_status_skipped\">0</span> <br /><br />\r\n             <strong>AND</strong> I submit a valid purchase order <br /><br />\r\n             <strong>THEN</strong> a new <span class=\"label label_status_skipped\">order</span> shall be recorded <br /><br />\r\n             <strong>AND</strong> the order shall contain the correct purchase order information<br /><br />\r\n             <strong>AND</strong> I should receive a <span class=\"label label_status_skipped\">message</span> advising me of the particulars of my purchase <br /><br />\r\n            ","status":"failed","statusMessage":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[9], Is.EqualTo((Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy).ToString()))\r\n  Expected string length 6 but was 18. Strings differ at index 6.\r\n  Expected: \"510.00\"\r\n  But was:  \"510.00000000000006\"\r\n  -----------------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Gas.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Gas.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  Expected string length 133 but was 145. Strings differ at index 46.\r\n  Expected: \"You have purchased 1500 m³ at a cost of 510.00 there are 1500...\"\r\n  But was:  \"You have purchased 1500 m³ at a cost of 510.00000000000006 th...\"\r\n  ---------------------------------------------------------^\r\n\r\n","statusTrace":"   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass3_0.<CanPurchaseGas>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 129\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass3_0.<CanPurchaseGas>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 121\r\n   at Allure.Net.Commons.AllureApi.<>c__DisplayClass34_0.<Step>b__0()\r\n   at Allure.Net.Commons.AllureApi.ExecuteAction[T](String name, Action`1 start, Func`1 action, Action`1 resolve)\r\n   at Allure.Net.Commons.AllureApi.ExecuteStep[T](String name, Func`1 action)\r\n   at Allure.Net.Commons.AllureApi.Step(String name, Action action)\r\n   at ENSEK.Tests.EndPoints.Buy.CanPurchaseGas() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 120\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"FixtureSetup","time":{"start":1747630406434,"stop":1747630406434,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"TestSetup","time":{"start":1747630406698,"stop":1747630406698,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"descriptionHtml":"\r\n             <strong>GIVEN</strong> Current <span class=\"label label_status_skipped\">Electricity</span> stock is greater than <span class=\"label label_status_skipped\">0</span> <br /><br />\r\n             <strong>AND</strong> I submit a valid purchase order <br /><br />\r\n             <strong>THEN</strong> a new <span class=\"label label_status_skipped\">order</span> shall be recorded <br /><br />\r\n             <strong>AND</strong> the order shall contain the correct purchase order information<br /><br />\r\n             <strong>AND</strong> I should receive a <span class=\"label label_status_skipped\">message</span> advising me of the particulars of my purchase <br /><br />\r\n            ","status":"failed","statusMessage":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[9], Is.EqualTo((Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy).ToString()))\r\n  Expected string length 6 but was 18. Strings differ at index 6.\r\n  Expected: \"510.00\"\r\n  But was:  \"510.00000000000006\"\r\n  -----------------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Gas.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Gas.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  Expected string length 133 but was 145. Strings differ at index 46.\r\n  Expected: \"You have purchased 1500 m³ at a cost of 510.00 there are 1500...\"\r\n  But was:  \"You have purchased 1500 m³ at a cost of 510.00000000000006 th...\"\r\n  ---------------------------------------------------------^\r\n\r\n","statusTrace":"   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass3_0.<CanPurchaseGas>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 129\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass3_0.<CanPurchaseGas>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 121\r\n   at Allure.Net.Commons.AllureApi.<>c__DisplayClass34_0.<Step>b__0()\r\n   at Allure.Net.Commons.AllureApi.ExecuteAction[T](String name, Action`1 start, Func`1 action, Action`1 resolve)\r\n   at Allure.Net.Commons.AllureApi.ExecuteStep[T](String name, Func`1 action)\r\n   at Allure.Net.Commons.AllureApi.Step(String name, Action action)\r\n   at ENSEK.Tests.EndPoints.Buy.CanPurchaseGas() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 120\r\n","steps":[{"name":"Step 1 : Create purchase order for 50% of current stock","time":{"start":1747630406698,"stop":1747630406699,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Step 2 : submit purchase order","time":{"start":1747630406699,"stop":1747630406767,"duration":68},"status":"passed","steps":[],"attachments":[{"uid":"5e134d5737f3f4a3","name":"Raw Response","source":"5e134d5737f3f4a3.txt","type":"application/json","size":4949}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Step 2 : assert order created","time":{"start":1747630406767,"stop":1747630406834,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Step 2 : assert confirmation message","time":{"start":1747630406834,"stop":1747630406835,"duration":1},"status":"failed","statusMessage":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[9], Is.EqualTo((Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy).ToString()))\r\n  Expected string length 6 but was 18. Strings differ at index 6.\r\n  Expected: \"510.00\"\r\n  But was:  \"510.00000000000006\"\r\n  -----------------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Gas.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Gas.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  Expected string length 133 but was 145. Strings differ at index 46.\r\n  Expected: \"You have purchased 1500 m³ at a cost of 510.00 there are 1500...\"\r\n  But was:  \"You have purchased 1500 m³ at a cost of 510.00000000000006 th...\"\r\n  ---------------------------------------------------------^\r\n\r\n","statusTrace":"NUnit.Framework.MultipleAssertException: Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[9], Is.EqualTo((Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy).ToString()))\r\n  Expected string length 6 but was 18. Strings differ at index 6.\r\n  Expected: \"510.00\"\r\n  But was:  \"510.00000000000006\"\r\n  -----------------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Gas.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Gas.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  Expected string length 133 but was 145. Strings differ at index 46.\r\n  Expected: \"You have purchased 1500 m³ at a cost of 510.00 there are 1500...\"\r\n  But was:  \"You have purchased 1500 m³ at a cost of 510.00000000000006 th...\"\r\n  ---------------------------------------------------------^\r\n\r\n\r\n   at NUnit.Framework.Assert.AssertionScope.Dispose()\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass3_0.<CanPurchaseGas>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 129\r\n   at ENSEK.Tests.EndPoints.Buy.<>c__DisplayClass3_0.<CanPurchaseGas>b__3() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 121\r\n   at Allure.Net.Commons.AllureApi.<>c__DisplayClass34_0.<Step>b__0()\r\n   at Allure.Net.Commons.AllureApi.ExecuteAction[T](String name, Action`1 start, Func`1 action, Action`1 resolve)\r\n   at Allure.Net.Commons.AllureApi.ExecuteStep[T](String name, Func`1 action)\r\n   at Allure.Net.Commons.AllureApi.Step(String name, Action action)\r\n   at ENSEK.Tests.EndPoints.Buy.CanPurchaseGas() in Z:\\MarkKemp.QA\\Repos\\ENSEK-Lead-QA-Exercise\\Tests\\EndPoints\\Buy.cs:line 120","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":4,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"TestTeardown","time":{"start":1747630406835,"stop":1747630406835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"FixtureTeardown","time":{"start":1747630406990,"stop":1747630406990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"thread","value":"NUnit.Fw.NonParallelWorker"},{"name":"host","value":"MARKSPC"},{"name":"language","value":"C#"},{"name":"framework","value":"NUnit 3"},{"name":"package","value":"ENSEK.Tests.EndPoints"},{"name":"testMethod","value":"CanPurchaseGas"},{"name":"testClass","value":"Buy"},{"name":"feature","value":"Buy Controls"},{"name":"suite","value":"Buy API End Point Tests"},{"name":"tag","value":"API Tests"},{"name":"tag","value":"Automated"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5180bbe9139142f2","status":"failed","statusDetails":"Multiple failures or warnings in test:\r\n  1)   Assert.That(splitResponseMessage[9], Is.EqualTo((Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy).ToString()))\r\n  Expected string length 6 but was 18. Strings differ at index 6.\r\n  Expected: \"510.00\"\r\n  But was:  \"510.00000000000006\"\r\n  -----------------^\r\n\r\n  2)   Assert.That(buyResponse.Content.Message, Is.EqualTo($\"You have purchased {unitsToBuy} {Global.DefaultStockLevels.Gas.UnitMeasurement} at a cost of {Global.DefaultStockLevels.Gas.UnitCost * unitsToBuy} there are {Global.DefaultStockLevels.Gas.UnitsInStock - unitsToBuy} units remaining. Your order id is {order.Id}.\"))\r\n  Expected string length 133 but was 145. Strings differ at index 46.\r\n  Expected: \"You have purchased 1500 m³ at a cost of 510.00 there are 1500...\"\r\n  But was:  \"You have purchased 1500 m³ at a cost of 510.00000000000006 th...\"\r\n  ---------------------------------------------------------^\r\n\r\n","time":{"start":1747630323792,"stop":1747630323935,"duration":143}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["API Tests","Automated"]},"source":"e6db18b8694ecb34.json","parameterValues":[]}