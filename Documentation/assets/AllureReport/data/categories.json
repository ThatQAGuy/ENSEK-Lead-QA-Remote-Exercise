{"uid":"4b4757e66a1912dae1a509f688f20b0f","name":"categories","children":[{"name":"Product defects","children":[{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(energyResponse.StatusCode, Is.EqualTo(HttpStatusCode.Unauthorized))\r\n  Expected: Unauthorized\r\n  But was:  OK\r\n\r\n  2)   Assert.That(energyResponseModel.Message, Is.EqualTo(\"Unauthorized\"))\r\n  Expected: \"Unauthorized\"\r\n  But was:  null\r\n\r\n","children":[{"name":"Unauthorized User Cant Access Data","uid":"e4468468b50d5b53","parentUid":"59129607cbf16cff97d290481dd61f5c","status":"failed","time":{"start":1747767691216,"stop":1747767691308,"duration":92},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["API Tests","Automated"]}],"uid":"59129607cbf16cff97d290481dd61f5c"},{"name":"  Assert.That(stringArray[9], Is.EqualTo((expectedResults.PricePerUnit * expectedResults.QuantityOfUnits).ToString(\"0.00\")))\r\n  Expected string length 6 but was 5. Strings differ at index 5.\r\n  Expected: \"752.00\"\r\n  But was:  \"752.0\"\r\n  ----------------^\r\n","children":[{"name":"Purchase Electric - Many Units","uid":"43c605412b5ebb59","parentUid":"15e7a1608e337b371e06403f13f29e13","status":"failed","time":{"start":1747767691758,"stop":1747767692044,"duration":286},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["3","1600"],"tags":["API Tests","Automated"]}],"uid":"15e7a1608e337b371e06403f13f29e13"},{"name":"  Assert.That(response.StatusCode, Is.EqualTo(expectedResults.StatusCode))\r\n  Expected: BadRequest\r\n  But was:  OK\r\n","children":[{"name":"Purchase Electric - More Than Current Stock","uid":"524ebf5690cd6751","parentUid":"dea71fdb64b78b166acc9bc0f0316178","status":"failed","time":{"start":1747767692045,"stop":1747767692184,"duration":139},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["3","10000"],"tags":["API Tests","Automated"]},{"name":"Purchase Gas - More Than Current Stock","uid":"ddf8fee96217ff5c","parentUid":"dea71fdb64b78b166acc9bc0f0316178","status":"failed","time":{"start":1747767692739,"stop":1747767692879,"duration":140},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["1","10000"],"tags":["API Tests","Automated"]},{"name":"Purchase Oil - More Than Current Stock","uid":"974bc0e60d5f5d","parentUid":"dea71fdb64b78b166acc9bc0f0316178","status":"failed","time":{"start":1747767693443,"stop":1747767693576,"duration":133},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["4","10000"],"tags":["API Tests","Automated"]}],"uid":"dea71fdb64b78b166acc9bc0f0316178"},{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(stringArray[3], Is.EqualTo(expectedResults.QuantityOfUnits.ToString(\"0.##\")))\r\n  Expected string length 1 but was 4. Strings differ at index 0.\r\n  Expected: \"1\"\r\n  But was:  \"2999\"\r\n  -----------^\r\n\r\n  2)   Assert.That(order.Fuel, Is.EqualTo(expectedResults.OrderRecord.Fuel))\r\n  String lengths are both 3. Strings differ at index 0.\r\n  Expected: \"Gas\"\r\n  But was:  \"gas\"\r\n  -----------^\r\n\r\n","children":[{"name":"Purchase Gas - One Unit","uid":"e0e737627d960bd0","parentUid":"7b3e426387751bdcbe9406c163c37756","status":"failed","time":{"start":1747767692186,"stop":1747767692449,"duration":263},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["1","1"],"tags":["API Tests","Automated"]}],"uid":"7b3e426387751bdcbe9406c163c37756"},{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(stringArray[3], Is.EqualTo(expectedResults.QuantityOfUnits.ToString(\"0.##\")))\r\n  String lengths are both 4. Strings differ at index 1.\r\n  Expected: \"1500\"\r\n  But was:  \"1499\"\r\n  ------------^\r\n\r\n  2)   Assert.That(stringArray[9], Is.EqualTo((expectedResults.PricePerUnit * expectedResults.QuantityOfUnits).ToString(\"0.00\")))\r\n  Expected string length 6 but was 18. Strings differ at index 6.\r\n  Expected: \"510.00\"\r\n  But was:  \"510.00000000000006\"\r\n  -----------------^\r\n\r\n  3)   Assert.That(order.Fuel, Is.EqualTo(expectedResults.OrderRecord.Fuel))\r\n  String lengths are both 3. Strings differ at index 0.\r\n  Expected: \"Gas\"\r\n  But was:  \"gas\"\r\n  -----------^\r\n\r\n","children":[{"name":"Purchase Gas - Many Units","uid":"2511e90a9055661","parentUid":"f98c04940164dea388ac21d4b730e38e","status":"failed","time":{"start":1747767692458,"stop":1747767692738,"duration":280},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["1","1500"],"tags":["API Tests","Automated"]}],"uid":"f98c04940164dea388ac21d4b730e38e"},{"name":"  Assert.That(stringArray[9], Is.EqualTo((expectedResults.PricePerUnit * expectedResults.QuantityOfUnits).ToString(\"0.00\")))\r\n  Expected string length 4 but was 3. Strings differ at index 2.\r\n  Expected: \"0.50\"\r\n  But was:  \"0.6\"\r\n  -------------^\r\n","children":[{"name":"Purchase Oil - One Unit","uid":"be46feadb1656c29","parentUid":"2e3c150cdee6f32a4916e7c876fe653f","status":"failed","time":{"start":1747767692881,"stop":1747767693164,"duration":283},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["4","1"],"tags":["API Tests","Automated"]}],"uid":"2e3c150cdee6f32a4916e7c876fe653f"},{"name":"  Assert.That(stringArray[9], Is.EqualTo((expectedResults.PricePerUnit * expectedResults.QuantityOfUnits).ToString(\"0.00\")))\r\n  Expected string length 4 but was 3. Strings differ at index 0.\r\n  Expected: \"5.00\"\r\n  But was:  \"6.0\"\r\n  -----------^\r\n","children":[{"name":"Purchase Oil - Many Units","uid":"29b61803913ca44","parentUid":"d3d92ef1f6c0c3d2c20cb6e28f5c89c9","status":"failed","time":{"start":1747767693166,"stop":1747767693441,"duration":275},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["4","10"],"tags":["API Tests","Automated"]}],"uid":"d3d92ef1f6c0c3d2c20cb6e28f5c89c9"},{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(buyResponse.StatusCode, Is.EqualTo(HttpStatusCode.Unauthorized))\r\n  Expected: Unauthorized\r\n  But was:  OK\r\n\r\n  2)   Assert.That(buyResponseModel.Message, Is.EqualTo(\"Unauthorized\"))\r\n  Expected string length 12 but was 130. Strings differ at index 0.\r\n  Expected: \"Unauthorized\"\r\n  But was:  \"You have purchased 1 kWh at a cost of 0.47 there are -7280 un...\"\r\n  -----------^\r\n\r\n","children":[{"name":"Unauthorized User Cant Buy Fuel","uid":"ecd5c2aa80ad10aa","parentUid":"e60788c2bca3dcd8f6a215bcd95db2bd","status":"failed","time":{"start":1747767693587,"stop":1747767693657,"duration":70},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["API Tests","Automated"]}],"uid":"e60788c2bca3dcd8f6a215bcd95db2bd"},{"name":"  Assert.That(orderResponse.StatusCode, Is.EqualTo(expectedResults.StatusCode))\r\n  Expected: Unauthorized\r\n  But was:  OK\r\n","children":[{"name":"Unauthorized User Cant Get All Orders","uid":"84cd9317c12ddf3e","parentUid":"8b0ef08fb864bc0d005ab7b64f1778d4","status":"failed","time":{"start":1747767694021,"stop":1747767694156,"duration":135},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["false"],"tags":["API Tests","Automated"]},{"name":"Unauthorized User Cant Retrieve Order Using Order Id","uid":"c1790ef9ee599f42","parentUid":"8b0ef08fb864bc0d005ab7b64f1778d4","status":"failed","time":{"start":1747767694307,"stop":1747767694373,"duration":66},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["false","\"080d9823-e874-4b5b-99ff-2021f2a59b25\""],"tags":["API Tests","Automated"]}],"uid":"8b0ef08fb864bc0d005ab7b64f1778d4"},{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(returnedOrder.Id, Is.EqualTo(order.Id))\r\n  String lengths are both 36. Strings differ at index 0.\r\n  Expected: \"080d9823-e874-4b5b-99ff-2021f2a59b25\"\r\n  But was:  \"31fc32da-bccb-44ab-9352-4f43fc44ed4b\"\r\n  -----------^\r\n\r\n  2)   Assert.That(returnedOrder.Fuel, Is.EqualTo(order.Fuel))\r\n  Expected string length 8 but was 3. Strings differ at index 0.\r\n  Expected: \"electric\"\r\n  But was:  \"gas\"\r\n  -----------^\r\n\r\n  3)   Assert.That(returnedOrder.Quantity, Is.EqualTo(order.Quantity))\r\n  Expected: 23\r\n  But was:  5\r\n\r\n  4)   Assert.That(returnedOrder.Time, Is.EqualTo(order.Time))\r\n  Expected: 2022-02-07 00:01:24\r\n  But was:  2022-03-10 09:01:24\r\n\r\n","children":[{"name":"Authorized User Can Retrieve Order Using Order Id","uid":"22ffc10df322743c","parentUid":"8c70086c3044e83220258f3c6abce1f9","status":"failed","time":{"start":1747767694157,"stop":1747767694306,"duration":149},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["true","\"080d9823-e874-4b5b-99ff-2021f2a59b25\""],"tags":["API Tests","Automated"]}],"uid":"8c70086c3044e83220258f3c6abce1f9"},{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(orderResponse.StatusCode, Is.EqualTo(expectedResults.StatusCode))\r\n  Expected: OK\r\n  But was:  InternalServerError\r\n\r\n  2)   Assert.That(orderResponseModel.Message, Is.EqualTo(expectedResults.Message))\r\n  Expected string length 7 but was 21. Strings differ at index 0.\r\n  Expected: \"Success\"\r\n  But was:  \"Internal Server Error\"\r\n  -----------^\r\n\r\n","children":[{"name":"Authorized User Can Deleted Order Using Order Id","uid":"1b1e810c42e68a1","parentUid":"115bd50093638e59e68ead03904a8b81","status":"failed","time":{"start":1747767694374,"stop":1747767694520,"duration":146},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["true","\"31fc32da-bccb-44ab-9352-4f43fc44ed4b\""],"tags":["API Tests","Automated"]}],"uid":"115bd50093638e59e68ead03904a8b81"},{"name":"Multiple failures or warnings in test:\r\n  1)   Assert.That(orderResponse.StatusCode, Is.EqualTo(expectedResults.StatusCode))\r\n  Expected: Unauthorized\r\n  But was:  InternalServerError\r\n\r\n  2)   Assert.That(orderResponseModel.Message, Is.EqualTo(expectedResults.Message))\r\n  Expected string length 12 but was 21. Strings differ at index 0.\r\n  Expected: \"Unauthorized\"\r\n  But was:  \"Internal Server Error\"\r\n  -----------^\r\n\r\n","children":[{"name":"Unauthorized User Cant Deleted Order Using Order Id","uid":"49a3655fdd12b6eb","parentUid":"bda27f89a2203b314991ae69bfdaedd7","status":"failed","time":{"start":1747767694524,"stop":1747767694599,"duration":75},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["false","\"2cdd6f69-95df-437e-b4d3-e772472db8de\""],"tags":["API Tests","Automated"]}],"uid":"bda27f89a2203b314991ae69bfdaedd7"},{"name":"  Assert.That(orderResponse.StatusCode, Is.EqualTo(expectedResults.StatusCode))\r\n  Expected: OK\r\n  But was:  InternalServerError\r\n","children":[{"name":"Authorized User Can Update Order Using Order Id","uid":"cb82ad51c6a1da0b","parentUid":"5a5aad27e2c2ddb57b0f74143c91204c","status":"failed","time":{"start":1747767694600,"stop":1747767694738,"duration":138},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["true","\"080d9823-e874-4b5b-99ff-2021f2a59b25\"","\"gas\"","50"],"tags":["API Tests","Automated"]}],"uid":"5a5aad27e2c2ddb57b0f74143c91204c"},{"name":"  Assert.That(orderResponse.StatusCode, Is.EqualTo(expectedResults.StatusCode))\r\n  Expected: Unauthorized\r\n  But was:  InternalServerError\r\n","children":[{"name":"Unauthorized User Cant Update Order Using Order Id","uid":"2682a54bdadf1cc6","parentUid":"965be675721791cff144869a4262c524","status":"failed","time":{"start":1747767694739,"stop":1747767694809,"duration":70},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["false","\"080d9823-e874-4b5b-99ff-2021f2a59b25\"","\"nuclear\"","500"],"tags":["API Tests","Automated"]}],"uid":"965be675721791cff144869a4262c524"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"SUT Does Not Allow For Nuclear Purchase Tests.","children":[{"name":"Purchase Nuclear - One Unit","uid":"be4c09409ee54fd5","parentUid":"d9367d903db9c6b5c9805df16e368b5c","status":"broken","time":{"start":1747767693582,"stop":1747767693583,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","1"],"tags":["API Tests","Automated"]},{"name":"Purchase Nuclear - Many Units","uid":"37da65ecb7d24f5","parentUid":"d9367d903db9c6b5c9805df16e368b5c","status":"broken","time":{"start":1747767693584,"stop":1747767693584,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","10"],"tags":["API Tests","Automated"]},{"name":"Purchase Nuclear - More Than Current Stock","uid":"d3490899b1f32f3e","parentUid":"d9367d903db9c6b5c9805df16e368b5c","status":"broken","time":{"start":1747767693586,"stop":1747767693586,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","10000"],"tags":["API Tests","Automated"]}],"uid":"d9367d903db9c6b5c9805df16e368b5c"}],"uid":"bdbf199525818fae7a8651db9eafe741"}]}